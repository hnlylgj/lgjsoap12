/* soapBasicHttpBinding_USCOREPrimeAccountCloudServiceProxy.h
   Generated by gSOAP 2.8.34 for adas.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapBasicHttpBinding_USCOREPrimeAccountCloudServiceProxy_H
#define soapBasicHttpBinding_USCOREPrimeAccountCloudServiceProxy_H
#include "soapH.h"

    class SOAP_CMAC BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy : public soap {
      public:
        /// Endpoint URL of service 'BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in adas.h, if any
        /// Construct a proxy with new managing context
        BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy();
        /// Copy constructor
        BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy(const BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy& rhs);
        /// Construct proxy given a managing context
        BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy(const struct soap&);
        /// Constructor taking an endpoint URL
        BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy(const char *endpoint);
        /// Constructor taking input and output mode flags for the new managing context
        BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy(const char *endpoint, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and managing context
        virtual ~BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy();
        /// Initializer used by constructors
        virtual void BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy *copy() SOAP_PURE_VIRTUAL;
        /// Copy assignment
        BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy& operator=(const BasicHttpBinding_USCOREPrimeAccountCloudServiceProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault string (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail as string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        /// Web service operation 'RegisterAccount' (returns SOAP_OK or error code)
        virtual int RegisterAccount(_ns1__RegisterAccount *ns1__RegisterAccount, _ns1__RegisterAccountResponse &ns1__RegisterAccountResponse)
        { return this->RegisterAccount(NULL, NULL, ns1__RegisterAccount, ns1__RegisterAccountResponse); }
        virtual int RegisterAccount(const char *soap_endpoint, const char *soap_action, _ns1__RegisterAccount *ns1__RegisterAccount, _ns1__RegisterAccountResponse &ns1__RegisterAccountResponse);
        /// Web service operation 'UpdatePassWord' (returns SOAP_OK or error code)
        virtual int UpdatePassWord(_ns1__UpdatePassWord *ns1__UpdatePassWord, _ns1__UpdatePassWordResponse &ns1__UpdatePassWordResponse)
        { return this->UpdatePassWord(NULL, NULL, ns1__UpdatePassWord, ns1__UpdatePassWordResponse); }
        virtual int UpdatePassWord(const char *soap_endpoint, const char *soap_action, _ns1__UpdatePassWord *ns1__UpdatePassWord, _ns1__UpdatePassWordResponse &ns1__UpdatePassWordResponse);
        /// Web service operation 'LoginCloud' (returns SOAP_OK or error code)
        virtual int LoginCloud(_ns1__LoginCloud *ns1__LoginCloud, _ns1__LoginCloudResponse &ns1__LoginCloudResponse)
        { return this->LoginCloud(NULL, NULL, ns1__LoginCloud, ns1__LoginCloudResponse); }
        virtual int LoginCloud(const char *soap_endpoint, const char *soap_action, _ns1__LoginCloud *ns1__LoginCloud, _ns1__LoginCloudResponse &ns1__LoginCloudResponse);
        /// Web service operation 'GetAccount' (returns SOAP_OK or error code)
        virtual int GetAccount(_ns1__GetAccount *ns1__GetAccount, _ns1__GetAccountResponse &ns1__GetAccountResponse)
        { return this->GetAccount(NULL, NULL, ns1__GetAccount, ns1__GetAccountResponse); }
        virtual int GetAccount(const char *soap_endpoint, const char *soap_action, _ns1__GetAccount *ns1__GetAccount, _ns1__GetAccountResponse &ns1__GetAccountResponse);
        /// Web service operation 'SelectAccount' (returns SOAP_OK or error code)
        virtual int SelectAccount(_ns1__SelectAccount *ns1__SelectAccount, _ns1__SelectAccountResponse &ns1__SelectAccountResponse)
        { return this->SelectAccount(NULL, NULL, ns1__SelectAccount, ns1__SelectAccountResponse); }
        virtual int SelectAccount(const char *soap_endpoint, const char *soap_action, _ns1__SelectAccount *ns1__SelectAccount, _ns1__SelectAccountResponse &ns1__SelectAccountResponse);
        /// Web service operation 'SetAccount' (returns SOAP_OK or error code)
        virtual int SetAccount(_ns1__SetAccount *ns1__SetAccount, _ns1__SetAccountResponse &ns1__SetAccountResponse)
        { return this->SetAccount(NULL, NULL, ns1__SetAccount, ns1__SetAccountResponse); }
        virtual int SetAccount(const char *soap_endpoint, const char *soap_action, _ns1__SetAccount *ns1__SetAccount, _ns1__SetAccountResponse &ns1__SetAccountResponse);
        /// Web service operation 'EditAccount' (returns SOAP_OK or error code)
        virtual int EditAccount(_ns1__EditAccount *ns1__EditAccount, _ns1__EditAccountResponse &ns1__EditAccountResponse)
        { return this->EditAccount(NULL, NULL, ns1__EditAccount, ns1__EditAccountResponse); }
        virtual int EditAccount(const char *soap_endpoint, const char *soap_action, _ns1__EditAccount *ns1__EditAccount, _ns1__EditAccountResponse &ns1__EditAccountResponse);
        /// Web service operation 'CreateDevice' (returns SOAP_OK or error code)
        virtual int CreateDevice(_ns1__CreateDevice *ns1__CreateDevice, _ns1__CreateDeviceResponse &ns1__CreateDeviceResponse)
        { return this->CreateDevice(NULL, NULL, ns1__CreateDevice, ns1__CreateDeviceResponse); }
        virtual int CreateDevice(const char *soap_endpoint, const char *soap_action, _ns1__CreateDevice *ns1__CreateDevice, _ns1__CreateDeviceResponse &ns1__CreateDeviceResponse);
        /// Web service operation 'MadeDevice' (returns SOAP_OK or error code)
        virtual int MadeDevice(_ns1__MadeDevice *ns1__MadeDevice, _ns1__MadeDeviceResponse &ns1__MadeDeviceResponse)
        { return this->MadeDevice(NULL, NULL, ns1__MadeDevice, ns1__MadeDeviceResponse); }
        virtual int MadeDevice(const char *soap_endpoint, const char *soap_action, _ns1__MadeDevice *ns1__MadeDevice, _ns1__MadeDeviceResponse &ns1__MadeDeviceResponse);
        /// Web service operation 'SaleDevice' (returns SOAP_OK or error code)
        virtual int SaleDevice(_ns1__SaleDevice *ns1__SaleDevice, _ns1__SaleDeviceResponse &ns1__SaleDeviceResponse)
        { return this->SaleDevice(NULL, NULL, ns1__SaleDevice, ns1__SaleDeviceResponse); }
        virtual int SaleDevice(const char *soap_endpoint, const char *soap_action, _ns1__SaleDevice *ns1__SaleDevice, _ns1__SaleDeviceResponse &ns1__SaleDeviceResponse);
        /// Web service operation 'BindingDevice' (returns SOAP_OK or error code)
        virtual int BindingDevice(_ns1__BindingDevice *ns1__BindingDevice, _ns1__BindingDeviceResponse &ns1__BindingDeviceResponse)
        { return this->BindingDevice(NULL, NULL, ns1__BindingDevice, ns1__BindingDeviceResponse); }
        virtual int BindingDevice(const char *soap_endpoint, const char *soap_action, _ns1__BindingDevice *ns1__BindingDevice, _ns1__BindingDeviceResponse &ns1__BindingDeviceResponse);
        /// Web service operation 'GetDevice' (returns SOAP_OK or error code)
        virtual int GetDevice(_ns1__GetDevice *ns1__GetDevice, _ns1__GetDeviceResponse &ns1__GetDeviceResponse)
        { return this->GetDevice(NULL, NULL, ns1__GetDevice, ns1__GetDeviceResponse); }
        virtual int GetDevice(const char *soap_endpoint, const char *soap_action, _ns1__GetDevice *ns1__GetDevice, _ns1__GetDeviceResponse &ns1__GetDeviceResponse);
        /// Web service operation 'SendSmartWarn' (returns SOAP_OK or error code)
        virtual int SendSmartWarn(_ns1__SendSmartWarn *ns1__SendSmartWarn, _ns1__SendSmartWarnResponse &ns1__SendSmartWarnResponse)
        { return this->SendSmartWarn(NULL, NULL, ns1__SendSmartWarn, ns1__SendSmartWarnResponse); }
        virtual int SendSmartWarn(const char *soap_endpoint, const char *soap_action, _ns1__SendSmartWarn *ns1__SendSmartWarn, _ns1__SendSmartWarnResponse &ns1__SendSmartWarnResponse);
        /// Web service operation 'PostListSmartWarn' (returns SOAP_OK or error code)
        virtual int PostListSmartWarn(_ns1__PostListSmartWarn *ns1__PostListSmartWarn, _ns1__PostListSmartWarnResponse &ns1__PostListSmartWarnResponse)
        { return this->PostListSmartWarn(NULL, NULL, ns1__PostListSmartWarn, ns1__PostListSmartWarnResponse); }
        virtual int PostListSmartWarn(const char *soap_endpoint, const char *soap_action, _ns1__PostListSmartWarn *ns1__PostListSmartWarn, _ns1__PostListSmartWarnResponse &ns1__PostListSmartWarnResponse);
        /// Web service operation 'GetSmartWarn' (returns SOAP_OK or error code)
        virtual int GetSmartWarn(_ns1__GetSmartWarn *ns1__GetSmartWarn, _ns1__GetSmartWarnResponse &ns1__GetSmartWarnResponse)
        { return this->GetSmartWarn(NULL, NULL, ns1__GetSmartWarn, ns1__GetSmartWarnResponse); }
        virtual int GetSmartWarn(const char *soap_endpoint, const char *soap_action, _ns1__GetSmartWarn *ns1__GetSmartWarn, _ns1__GetSmartWarnResponse &ns1__GetSmartWarnResponse);
        /// Web service operation 'TotalSmartWarn' (returns SOAP_OK or error code)
        virtual int TotalSmartWarn(_ns1__TotalSmartWarn *ns1__TotalSmartWarn, _ns1__TotalSmartWarnResponse &ns1__TotalSmartWarnResponse)
        { return this->TotalSmartWarn(NULL, NULL, ns1__TotalSmartWarn, ns1__TotalSmartWarnResponse); }
        virtual int TotalSmartWarn(const char *soap_endpoint, const char *soap_action, _ns1__TotalSmartWarn *ns1__TotalSmartWarn, _ns1__TotalSmartWarnResponse &ns1__TotalSmartWarnResponse);
        /// Web service operation 'SendCarRunState' (returns SOAP_OK or error code)
        virtual int SendCarRunState(_ns1__SendCarRunState *ns1__SendCarRunState, _ns1__SendCarRunStateResponse &ns1__SendCarRunStateResponse)
        { return this->SendCarRunState(NULL, NULL, ns1__SendCarRunState, ns1__SendCarRunStateResponse); }
        virtual int SendCarRunState(const char *soap_endpoint, const char *soap_action, _ns1__SendCarRunState *ns1__SendCarRunState, _ns1__SendCarRunStateResponse &ns1__SendCarRunStateResponse);
        /// Web service operation 'PostListCarRunState' (returns SOAP_OK or error code)
        virtual int PostListCarRunState(_ns1__PostListCarRunState *ns1__PostListCarRunState, _ns1__PostListCarRunStateResponse &ns1__PostListCarRunStateResponse)
        { return this->PostListCarRunState(NULL, NULL, ns1__PostListCarRunState, ns1__PostListCarRunStateResponse); }
        virtual int PostListCarRunState(const char *soap_endpoint, const char *soap_action, _ns1__PostListCarRunState *ns1__PostListCarRunState, _ns1__PostListCarRunStateResponse &ns1__PostListCarRunStateResponse);
        /// Web service operation 'GetCarRunState' (returns SOAP_OK or error code)
        virtual int GetCarRunState(_ns1__GetCarRunState *ns1__GetCarRunState, _ns1__GetCarRunStateResponse &ns1__GetCarRunStateResponse)
        { return this->GetCarRunState(NULL, NULL, ns1__GetCarRunState, ns1__GetCarRunStateResponse); }
        virtual int GetCarRunState(const char *soap_endpoint, const char *soap_action, _ns1__GetCarRunState *ns1__GetCarRunState, _ns1__GetCarRunStateResponse &ns1__GetCarRunStateResponse);
    };
#endif
